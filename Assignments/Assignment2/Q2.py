import random
import numpy as np
import math


print("Please Enter the Poisson Parameters List Size:")
n = int(input())

print("Please Enter the Poisson Parameters in this Format: Time Parameter ")
print("Such as:")
print("0 0.066")
print("30 0.2")
print("40 0.142")
print("...")

times = []
parameters = []
for i in range(n):
    inp = input().split()
    times.append(int(inp[0]))
    parameters.append(float(inp[1]))

times, parameters = zip(*sorted(zip(times, parameters)))  # to order list by time ascending
# print(times)
# print(parameters)


def findLamda(time):
    i = 0
    while i < n and time > times[i]:
        i += 1
    if i == n:
        return False
    return parameters[i - 1]


def Efinder(r, lambd):
    return (-1) * np.log(r) / lambd


# print("Please Enter the Number of Wanted Random Variables as Arrival Times generated by NSPP:")
# m = int(input())

lambdaMax = max(parameters)
lambd = lambdaMax
finalLambda = lambd
time = 0
lambdFound = False
arrivals = []
while True:
    r = random.uniform(0, 1)
    time += Efinder(r, lambd)
    lambd = findLamda(time)
    if not lambd:
        break
    rTilde = random.uniform(0, 1)
    if lambd / lambdaMax >= rTilde:
        arrivals.append(time)
        if not lambdFound:
            lambdFound = True
            finalLambda = lambd


print("Arrival Times Generated by NSPP are:")
print(arrivals)

print("Poisson Parameter Estimation (Lambda) is: " + str(finalLambda))

print()
print("Please Enter the Number of Wanted Random Variables as InterArrival Times:")
m = int(input())


def CDFReverseExp(lambd, n):
    Exps = []
    for i in range(n):
        r = random.uniform(0, 1)
        Exps.append(math.floor((-1) * np.log(1 - r) / lambd))
    return Exps

interArrivals = CDFReverseExp(finalLambda, m)
print("InterArrival Times Generated by Poisson Estimated Parameter are:")
print(*interArrivals)















